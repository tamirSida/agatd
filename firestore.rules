rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Basic security rules that allow authenticated users to access the necessary collections
    
    // Match all documents in the users collection
    match /users/{userId} {
      // Allow authenticated users to read and write their own documents
      // Allow admins to read and write all documents
      allow read, write: if request.auth != null && 
        (request.auth.uid == userId || 
         exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Match all documents in the clients collection
    match /clients/{clientId} {
      // Allow authenticated users to read and write their own documents
      // Allow agents to read all client documents (for dashboard)
      // Allow admins to read and write all documents
      allow read: if request.auth != null && 
        (request.auth.uid == clientId || 
         exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || 
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agent'));
      
      // Allow write access to admins
      allow write: if request.auth != null && 
         exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Allow clients to update and create their own documents, including cart operations
      allow update, create: if request.auth != null && request.auth.uid == clientId;
    }
    
    // Match all documents in the agents collection
    match /agents/{agentId} {
      // Allow authenticated users to read and write their own documents
      // Allow admins to read and write all documents
      allow read, write: if request.auth != null && 
        (request.auth.uid == agentId || 
         exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Registration requests
    match /registrationRequests/{requestId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if true; // Anyone can request registration
      allow update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Orders collection
    match /orders/{orderId} {
      // Allow clients to create orders and read their own orders
      allow create: if request.auth != null && 
                     request.resource.data.clientId == request.auth.uid;
      
      // Allow clients to read their own orders
      allow read: if request.auth != null && 
                   resource.data.clientId == request.auth.uid;
      
      // Allow agents to read and update orders for their clients
      allow read, update: if request.auth != null && 
                           exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agent' && 
                           resource.data.agentId == request.auth.uid;
      
      // Allow admins to read and write all orders
      allow read, write: if request.auth != null && 
                          exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      // Allow users to read their own notifications
      allow read: if request.auth != null && 
                   resource.data.recipientId == request.auth.uid;
      
      // Allow users to mark their own notifications as read
      allow update: if request.auth != null && 
                    resource.data.recipientId == request.auth.uid && 
                    request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);
      
      // Allow admins and agents to create notifications
      allow create: if request.auth != null && 
                    exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                    (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agent');
      
      // Allow admins to fully manage all notifications
      allow read, write: if request.auth != null && 
                         exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
                         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}